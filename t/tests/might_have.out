#
# *** DO NOT EDIT THIS FILE ***
# Generated on Wed Apr 18 22:18:13 2012 UTC, by
#   Mesoderm (0)
#   Moose::Object (2.0205)
#

package Schema::_mesoderm;
use Moose::Role;
sub schema { shift->result_source->schema->{__mesoderm} }

package Schema::_dbic;
use base qw(DBIx::Class::Schema);

package Schema::_scaffold;
use Moose::Role;
require Scalar::Util;
requires 'connect_args';

has 'dbic' => (
  is => 'ro',
  isa => 'Schema::_dbic',
  lazy => 1,
  default => sub {
    my $self = shift;
    my $dbic = Schema::_dbic->connect( $self->connect_args );
    Scalar::Util::weaken($dbic->{__mesoderm} = $self);
    return $dbic;
  },
);

##
## Table: t1
##

has 't1' => (
  is      => 'ro',
  lazy    => 1,
  isa     => 'Schema::ResultSet::T1',
  default => sub { shift->dbic->resultset('t1'); },
);

{
  package Schema::T1;
  use Moose;
  extends 'DBIx::Class';

  __PACKAGE__->load_components(qw/ Core /);

  with qw(
    Schema::_mesoderm
    );
  no Moose;

  __PACKAGE__->table('t1');
  __PACKAGE__->add_columns(
    id => {
      data_type => 'INT',
      default_value => undef,
      is_auto_increment => 1,
      is_nullable => 0,
      size => 11
    },
    name => {
      data_type => 'VARCHAR',
      default_value => undef,
      is_nullable => 1,
      size => 40
    },
  );
  __PACKAGE__->set_primary_key(qw/ id /);
  __PACKAGE__->add_unique_constraint( name => [qw/ name /]);
  __PACKAGE__->has_many( t2s => 'Schema::T2',{
    'foreign.t' => 'self.name'
  });
  { package Schema::ResultSet::T1;
    use Moose;
    extends 'DBIx::Class::ResultSet';
    with qw(
      Schema::_mesoderm
      );
    no Moose;
  }
  __PACKAGE__->resultset_class('Schema::ResultSet::T1');
  Schema::_dbic->register_class( t1 => __PACKAGE__ );
}

##
## Table: t2
##

has 't2' => (
  is      => 'ro',
  lazy    => 1,
  isa     => 'Schema::ResultSet::T2',
  default => sub { shift->dbic->resultset('t2'); },
);

{
  package Schema::T2;
  use Moose;
  extends 'DBIx::Class';

  __PACKAGE__->load_components(qw/ Core /);

  with qw(
    Schema::_mesoderm
    );
  no Moose;

  __PACKAGE__->table('t2');
  __PACKAGE__->add_columns(
    id => {
      data_type => 'INT',
      default_value => undef,
      is_auto_increment => 1,
      is_nullable => 0,
      size => 11
    },
    t => {
      data_type => 'VARCHAR',
      default_value => undef,
      is_nullable => 1,
      size => 40
    },
  );
  __PACKAGE__->set_primary_key(qw/ id /);
  __PACKAGE__->might_have( t1 => 'Schema::T1',{
    'foreign.name' => 'self.t'
  });
  { package Schema::ResultSet::T2;
    use Moose;
    extends 'DBIx::Class::ResultSet';
    with qw(
      Schema::_mesoderm
      );
    no Moose;
  }
  __PACKAGE__->resultset_class('Schema::ResultSet::T2');
  Schema::_dbic->register_class( t2 => __PACKAGE__ );
}


1;
